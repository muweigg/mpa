@import 'variables';

@function map-set ($map, $key, $value) {
  $new: ($key: $value);
  @return map-merge($map, $new);
}

@function update-list-in-map ($map, $key, $value) {
  $list: append(map-get($map, $key), $value);
  @return map-set($map, $key, $list);
}

@function get-columns ($columns) {
  $unique-index: ();
  $columns-new: ();
  @each $column in $columns {
    @for $i from 1 through $column {
      @if $column % $i == 0 and not(map-has-key($unique-index , $i)) {
        $unique-index: map-set($unique-index, $i, true);
        $columns-new: append($columns-new, $i);
      }
    }
  }
  @return $columns-new;
}

@function get-column-selector-prefix ($offset: false) {
  $selector-prefix: #{$prefix};
  @if $offset {
    $selector-prefix: #{$prefix}offset-;
  }
  @return $selector-prefix;
}

@function get-column-selector-suffix ($breakpoint: null) {
  $selector-suffix: null;
  @if $breakpoint {
    $selector-suffix: -#{$breakpoint};
  }
  @return $selector-suffix;
}

@function get-column-selectors ($ratio, $breakpoint: null, $offset: false) {
  $selectors: '';
  @if $class-selector {
    $selectors: '.#{get-column-selector-prefix($offset)}#{$ratio}#{get-column-selector-suffix($breakpoint)}';
  }
  @if $attribute-selector {
    @if $selectors == '' {
      $selectors: '[#{get-column-selector-prefix($offset)}#{$ratio}#{get-column-selector-suffix($breakpoint)}]';
    } @else {
      $selectors: $selectors + ', [#{get-column-selector-prefix($offset)}#{$ratio}#{get-column-selector-suffix($breakpoint)}]';
    }
  }
  @return $selectors;
}

@function get-selectors-by-name ($name, $breakpoint: null) {
  $parent-symbol: null;
  @if str-slice($name, 1, 1) == '&' {
    $parent-symbol: '&';
    $name: str-slice($name, 2, str-length($name));
  }
  @if $breakpoint {
    $breakpoint: -#{$breakpoint};
  }
  $selectors: '';
  @if $class-selector {
    $selectors: '#{$parent-symbol}.#{$name}#{$breakpoint}';
  }
  @if $attribute-selector {
    @if $selectors == '' {
      $selectors: '#{$parent-symbol}[#{$name}#{$breakpoint}]';
    } @else {
      $selectors: $selectors + ', #{$parent-symbol}[#{$name}#{$breakpoint}]';
    }
  }
  @return $selectors;
}

@function get-breakpoint ($breakpoint) {
  $breakpoint-value: map-get($breakpoints, $breakpoint);
  @if $breakpoint-value {
    $breakpoint: $breakpoint-value;
  }
  @return $breakpoint;
}

@function remove-last-symbol ($prefix) {
  @if str-slice($prefix, str-length($prefix), str-length($prefix)) == '-' {
    $prefix: str-slice($prefix, 1, str-length($prefix) - 1);
  }
  @return $prefix;
}